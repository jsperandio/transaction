basePath: /
definitions:
  request.CreateAccount:
    properties:
      document_number:
        type: string
    required:
    - document_number
    type: object
  request.CreateTransaction:
    properties:
      account_id:
        type: integer
      amount:
        type: number
      operation_type_id:
        type: integer
    required:
    - account_id
    - amount
    - operation_type_id
    type: object
  response.Account:
    properties:
      account_id:
        type: integer
      document_number:
        type: string
    type: object
  response.FormattedValidationError:
    properties:
      httpStatusCode:
        type: integer
      message:
        type: string
      validationErrors:
        items:
          $ref: '#/definitions/response.ValidationError'
        type: array
    type: object
  response.Transaction:
    properties:
      account_id:
        type: integer
      amount:
        type: number
      event_date:
        type: string
      operation_type_id:
        type: integer
      transaction_id:
        type: integer
    type: object
  response.ValidationError:
    properties:
      field:
        type: string
      message:
        type: string
      path:
        type: string
      value: {}
    type: object
host: localhost:8081
info:
  contact:
    email: support@swagger.io
    name: API Support
    url: http://www.swagger.io/support
  description: This is a implementation of transaction server.
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
  title: Transactions Server
  version: "1.0"
paths:
  /accounts:
    post:
      consumes:
      - application/json
      description: Create an account by given document number
      parameters:
      - description: document number for account
        in: body
        name: account
        required: true
        schema:
          $ref: '#/definitions/request.CreateAccount'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/response.Account'
        "400":
          description: Bad Request
          schema: {}
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/response.FormattedValidationError'
        "500":
          description: Internal Server Error
          schema: {}
      summary: Create an account
      tags:
      - Account
  /accounts/{accountId}:
    get:
      consumes:
      - application/json
      description: Find an account by ID
      parameters:
      - description: ID of desired account
        in: path
        name: accountId
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Account'
        "400":
          description: Bad Request
          schema: {}
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/response.FormattedValidationError'
      summary: Find account
      tags:
      - Account
  /health:
    get:
      consumes:
      - application/json
      description: Check health of api
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: Bad Request
          schema: {}
        "406":
          description: Not Acceptable
          schema: {}
      summary: Check health of api
  /transactions:
    post:
      consumes:
      - application/json
      description: Create an transaction
      parameters:
      - description: values for transaction
        in: body
        name: transaction
        required: true
        schema:
          $ref: '#/definitions/request.CreateTransaction'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/response.Transaction'
        "400":
          description: Bad Request
          schema: {}
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/response.FormattedValidationError'
        "500":
          description: Internal Server Error
          schema: {}
      summary: Create an transaction
      tags:
      - Transaction
swagger: "2.0"
